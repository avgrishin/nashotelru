@model Nashotelru.Models.Response
@using Nashotelru.Resources.Response
@*@using Recaptcha;*@
@using CaptchaMvc.HtmlHelpers
@using CaptchaMvc.Interface
@using CaptchaMvc.Infrastructure
@using CaptchaMvc.Models
@{
  ViewBag.Title = Nashotelru.Resources.Response.Response.ResponseName;
  //ICaptcha captcha = Html.Captcha("Обновить", "Введите значение", 7, "Поле не заполнено", true);
  ICaptcha captcha = Html.Captcha(7, "_Captcha", "_CaptchaScript", null, new[] {
    new ParameterModel(DefaultCaptchaManager.IsRequiredAttribute, true),
    new ParameterModel(DefaultCaptchaManager.InputTextAttribute, Nashotelru.Resources.Response.Response.InputText),
    new ParameterModel(DefaultCaptchaManager.RefreshTextAttribute, Nashotelru.Resources.Response.Response.RefreshText),
    new ParameterModel(DefaultCaptchaManager.RequiredMessageAttribute, Nashotelru.Resources.Response.Response.RequiredMessage)
  });
}
<div class="row">
  <div class="col-md-10 col-md-offset-1">
    @using (Html.BeginForm("Create", "Response", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
      @Html.AntiForgeryToken()

      <div class="form-horizontal">
        <h2>@ViewBag.Title</h2>
        @Html.ValidationSummary(true)

        <div class="form-group">
          @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-4" })
          <div class="col-md-8">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.Mail, new { @class = "control-label col-md-4" })
          <div class="col-md-8">
            @Html.EditorFor(model => model.Mail)
            @Html.ValidationMessageFor(model => model.Mail)
          </div>
        </div>

        <div class="form-group">
          @Html.LabelFor(model => model.Text, new { @class = "control-label col-md-4" })
          <div class="col-md-8">
            @Html.EditorFor(model => model.Text)
            @Html.ValidationMessageFor(model => model.Text)
            <div class="text-muted">@Nashotelru.Resources.Response.Response.PermissibleTags : &lt;b&gt;, &lt;i&gt;, &lt;br&gt;.</div>
          </div>
        </div>

        <div class="form-group">
          <div class="col-md-offset-4 col-md-8">
            @*@Html.Raw(Html.GenerateCaptcha("captcha", "clean"))*@
            @captcha.RenderMarkup()
            @*@Html.Captcha("refreshText", "inputText", 5)*@
            @*@Html.ValidationMessage("captcha")*@
          </div>
        </div>
        <div class="form-group">
          <div class="col-md-offset-4 col-md-8">
            <input type="submit" value="@Nashotelru.Resources.Response.Response.Send" class="btn btn-default" />
          </div>
        </div>
      </div>
    }
  </div>
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
  @Scripts.Render("~/bundles/jquerymask")
  @captcha.RenderScript()
}
